$particles-per-plate: 500;
$particle-base-duration: 30;
$particle-blocks: 4;

@function generateParticles($size) {
  $box-shadow-string:();

  @for $i from 0 through $particles-per-plate {
    $box-shadow-string: append($box-shadow-string, #{randomPosition()}vw #{randomPosition()}vh #{$size * 5}px #{$size * 3}px rgba(255, 255, 255, 0.5), comma);
  }

  @return $box-shadow-string;
}

@function randomPosition() {
  @return ((random(100) - 50) * 2);
}

@keyframes orbit {
  from {
    transform: rotate(0deg) translate(-50%, -50%)
  }
  to {
    transform: rotate(360deg) translate(-50%, -50%)
  }
}

* {
  box-sizing: border-box;
  font-family: Arial, serif;
}

body {
  background: black;
  color: white;
}

.particles-box {
  align-items: center;
  background: linear-gradient(207deg, #396c93 35%, transparent);
  display: flex;
  height: 100vh;
  justify-content: flex-end;
  padding: 20px;
  position: relative;
  width: 100%;

  &::before {
    background: linear-gradient(117deg, #000 15%, transparent 50%, transparent 65%, #000 95%);
    content: '';
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }

  &__content {
    align-items: center;
    background: white;
    color: black;
    display: flex;
    font-size: 30px;
    height: 40%;
    justify-content: center;
    position: relative;
    width: 40%;
  }
}

.particle-effect {
  height: 100%;
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  width: 100%;

  &__box {
    animation: orbit 21s infinite linear;
    height: 25%;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 25%;

    &::before {
      animation: inherit;
      animation-direction: reverse;
      border-radius: 50%;
      content: '';
      height: 1px;
      left: 50%;
      opacity: 0.25;
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 1px;
    }

    @for $i from 0 through $particle-blocks {
      &--#{$i} {

        animation-delay: -#{$i * ($particle-base-duration / $particle-blocks)}s;
        animation-duration: #{$particle-base-duration + (($particle-base-duration / 2) * $i)}s;

        @if ($i % 2 == 0) {
          animation-direction: reverse;
        }

        &::before {
          box-shadow: generateParticles($i);

          @if ($i % 2 == 0) {
            animation-direction: normal;
          }
        }
      }
    }
  }
}
